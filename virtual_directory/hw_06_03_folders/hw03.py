import sys
from pathlib import Path
from colorama import Fore, Style, init

# –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ print –∫–æ–ª—ñ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ.
init(autoreset=True)

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.
DIR_COLOR = Fore.BLUE
FILE_COLOR = Fore.GREEN
ERROR_COLOR = Fore.RED
INFO_COLOR = Fore.CYAN
WARNING_COLOR = Fore.YELLOW


def visualize_directory_structure(directory_path: Path, indent_level: int = 0):
    """
       –ê—Ä–≥—É–º–µ–Ω—Ç–∏:
        directory_path (Path): —à–ª—è—Ö –¥–æ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó (–æ–±‚Äô—î–∫—Ç Path).
        indent_level (int): —Ä—ñ–≤–µ–Ω—å –≤–∫–ª–∞–¥–µ–Ω–æ—Å—Ç—ñ –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ —É –≤–∏–≤–µ–¥–µ–Ω–Ω—ñ.
                            –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 0 ‚Äî –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
    """
    # –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥—Å—Ç—É–ø: –∫–æ–∂–µ–Ω —Ä—ñ–≤–µ–Ω—å –¥–æ–¥–∞—î 4 –ø—Ä–æ–±—ñ–ª–∏.
    indent = "    " * indent_level

    try:
        # –ü—Ä–æ—Ö–æ–¥–∏–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó (–ø–∞–ø–∫–∏ —Ç–∞ —Ñ–∞–π–ª–∏).
        for item in directory_path.iterdir():
            if item.is_dir():
                # –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç ‚Äî —Ü–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è (–ø–∞–ø–∫–∞):
                # –í–∏–≤–æ–¥–∏–º–æ —ó—ó —ñ–º‚Äô—è —Å–∏–Ω—ñ–º –∫–æ–ª—å–æ—Ä–æ–º —ñ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∑–∞—Ö–æ–¥–∏–º–æ –≤—Å–µ—Ä–µ–¥–∏–Ω—É.
                print(f"{indent}{DIR_COLOR}üìÇ {item.name}")
                visualize_directory_structure(item, indent_level + 1)
            elif item.is_file():
                # –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç ‚Äî —Ü–µ —Ñ–∞–π–ª: –≤–∏–≤–æ–¥–∏–º–æ –π–æ–≥–æ —ñ–º‚Äô—è –∑–µ–ª–µ–Ω–∏–º –∫–æ–ª—å–æ—Ä–æ–º.
                print(f"{indent}{FILE_COLOR}üìÑ {item.name}")
            
    except PermissionError:
        # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó ‚Äî –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        print(f"{indent}{WARNING_COLOR}‚ö†Ô∏è –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {directory_path.name}")
    except Exception as e:
        # –ó–∞–≥–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –±—É–¥—å-—è–∫–∏—Ö —ñ–Ω—à–∏—Ö –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫.
        print(f"{indent}{ERROR_COLOR}‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ö–æ–¥—É '{directory_path.name}': {e}")


if __name__ == "__main__":
    # –¶–µ–π –±–ª–æ–∫ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ª–∏—à–µ —Ç–æ–¥—ñ, –∫–æ–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—é—Ç—å –Ω–∞–ø—Ä—è–º—É, –∞ –Ω–µ —ñ–º–ø–æ—Ä—Ç—É—é—Ç—å —è–∫ –º–æ–¥—É–ª—å —É —ñ–Ω—à—É –ø—Ä–æ–≥—Ä–∞–º—É.

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ–¥–∞–≤ —Ä—ñ–≤–Ω–æ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
    if len(sys.argv) != 2:
        print(f"{ERROR_COLOR}–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python {sys.argv[0]} <—à–ª—è—Ö_–¥–æ_–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó>")
        sys.exit(1)  # –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ–≥—Ä–∞–º—É –∑ –∫–æ–¥–æ–º –ø–æ–º–∏–ª–∫–∏ 1.

    # –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö, —è–∫–∏–π –ø–µ—Ä–µ–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.
    target_path_str = sys.argv[1]
    # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±‚Äô—î–∫—Ç Path –¥–ª—è –∑—Ä—É—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é.
    target_path = Path(target_path_str)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∏–π —à–ª—è—Ö.
    if not target_path.exists():
        print(f"{ERROR_COLOR}–ü–æ–º–∏–ª–∫–∞: —à–ª—è—Ö '{target_path_str}' –Ω–µ —ñ—Å–Ω—É—î.")
        sys.exit(1)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ü–µ–π —à–ª—è—Ö —Å–∞–º–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é (–∞ –Ω–µ —Ñ–∞–π–ª–æ–º).
    if not target_path.is_dir():
        print(f"{ERROR_COLOR}–ü–æ–º–∏–ª–∫–∞: —à–ª—è—Ö '{target_path_str}' –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é.")
        sys.exit(1)

    # –Ø–∫—â–æ –≤—Å—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ñ ‚Äî –≤–∏–≤–æ–¥–∏–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ñ –ø–æ—á–∏–Ω–∞—î–º–æ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—é.
    print(f"{INFO_COLOR}–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {target_path_str}")
    visualize_directory_structure(target_path)


# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
''''
python hw03.py
python hw03.py non_existent_folder
python hw03.py hw03.py
python hw03.py .
'''


