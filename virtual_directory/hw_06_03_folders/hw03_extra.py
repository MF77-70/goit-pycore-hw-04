"""
_extra = –ó–∞–º–µ–Ω–∏–ª–∏ –æ–±—ã—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –Ω–∞ —Å–∏–º–≤–æ–ª—ã –ø—Å–µ–≤–¥–æ–≥—Ä–∞—Ñ–∏–∫–∏ (‚îú‚îÄ‚îÄ, ‚îÇ, ‚îî‚îÄ‚îÄ),
–≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–µ—Ä–µ–≤–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π ‚Äî —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–∫–æ–º, –∞ –≤ –≤–∏–¥–µ
–∏–µ—Ä–∞—Ä—Ö–∏–∏ —Å –≤–µ—Ç–∫–∞–º–∏, –∫–∞–∫ –≤ —Ñ–∞–π–ª–æ–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ
"""

import sys
from pathlib import Path
from colorama import Fore, Style, init

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–ª—å–æ—Ä—ñ–≤
init(autoreset=True)

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
DIR_COLOR = Fore.BLUE
FILE_COLOR = Fore.GREEN
ERROR_COLOR = Fore.RED
INFO_COLOR = Fore.CYAN
LINE_COLOR = Fore.LIGHTBLACK_EX # ‚Üê –∫–æ–ª—ñ—Ä –¥–ª—è –ª—ñ–Ω—ñ–π (–±—ñ–ª–∏–π)

# –°–∏–º–≤–æ–ª–∏ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –¥–µ—Ä–µ–≤–∞
BRANCH = "‚îú‚îÄ‚îÄ "
LAST_BRANCH = "‚îî‚îÄ‚îÄ "
VERTICAL = "‚îÇ   "
EMPTY = "    "

def visualize_directory_tree(path: Path, prefix: str = ""):
    """
    –í–∏–≤–æ–¥–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —É —Ñ–æ—Ä–º–∞—Ç—ñ –¥–µ—Ä–µ–≤–∞ (—è–∫ —É –∫–æ–º–∞–Ω–¥—ñ tree),
    –∑ –±—ñ–ª–∏–º–∏ –ª—ñ–Ω—ñ—è–º–∏ ‚îú‚îÄ‚îÄ ‚îÇ ‚îî‚îÄ‚îÄ.
    """
    try:
        items = sorted(path.iterdir(), key=lambda x: (not x.is_dir(), x.name.lower()))
    except PermissionError:
        print(f"{prefix}{ERROR_COLOR}‚ö†Ô∏è  –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ: {path.name}")
        return

    for i, item in enumerate(items):
        connector = LAST_BRANCH if i == len(items) - 1 else BRANCH

        # –§–æ—Ä–º—É—î–º–æ –ø—Ä–µ—Ñ—ñ–∫—Å: –±—ñ–ª—ñ –ª—ñ–Ω—ñ—ó + –∫–æ–ª—å–æ—Ä–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç
        branch_part = f"{LINE_COLOR}{connector}{Style.RESET_ALL}"

        if item.is_dir():
            print(f"{prefix}{branch_part}{DIR_COLOR}üìÅ {item.name}{Style.RESET_ALL}")
            extension = EMPTY if i == len(items) - 1 else VERTICAL
            visualize_directory_tree(item, prefix + LINE_COLOR + extension + Style.RESET_ALL)
        else:
            print(f"{prefix}{branch_part}{FILE_COLOR}üìÑ {item.name}{Style.RESET_ALL}")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"{ERROR_COLOR}–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python {sys.argv[0]} <—à–ª—è—Ö_–¥–æ_–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó>")
        sys.exit(1)

    target = Path(sys.argv[1])
    if not target.exists():
        print(f"{ERROR_COLOR}–ü–æ–º–∏–ª–∫–∞: —à–ª—è—Ö '{target}' –Ω–µ —ñ—Å–Ω—É—î.")
        sys.exit(1)

    if not target.is_dir():
        print(f"{ERROR_COLOR}–ü–æ–º–∏–ª–∫–∞: —à–ª—è—Ö '{target}' –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é.")
        sys.exit(1)

    print(f"{INFO_COLOR}–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {target.resolve()}{Style.RESET_ALL}")
    visualize_directory_tree(target)
